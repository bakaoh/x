// Code generated by protoc-gen-zpi. DO NOT EDIT.
package pb

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

type MergeClient interface {
	Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error)
	Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error)
}

type mergeClient struct {
	cc *grpc.ClientConn
}

func NewMergeClient(cc *grpc.ClientConn) MergeClient {
	return &mergeClient{cc}
}

func (c *mergeClient) Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error) {
	out := new(EchoResponse)
	err := c.cc.Invoke(ctx, "/pb.EchoService/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mergeClient) Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoResponse, error) {
	out := new(InfoResponse)
	err := c.cc.Invoke(ctx, "/pb.Internal/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
